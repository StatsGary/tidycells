
language: R

r:
  - oldrel
  - release
  - devel

cache: packages

warnings_are_errors: true

os:
  - linux
  - osx

matrix:
  exclude:
    -
      os: osx
      r: oldrel
    -
      os: osx
      r: devel

after_success:
  - if [[ "${TRAVIS_OS_NAME}" = "linux" && "${TRAVIS_R_VERSION_STRING}" = "release" ]]; then Rscript -e 'covr::codecov(type = "all")'; fi
  - if [[ "${TRAVIS_OS_NAME}" = "linux" && "${TRAVIS_R_VERSION_STRING}" = "release" ]]; then Rscript -e 'covr::coveralls(type = "all", line_exclusions = c("R/shiny_etc.R","R/shiny_main.R","R/shiny_parts_server.R","R/shiny_parts_server_components.R","R/shiny_parts_ui.R","R/visual_functions.R"))'; fi
  - if [[ "${TRAVIS_OS_NAME}" = "linux" && "${TRAVIS_R_VERSION_STRING}" = "release" ]]; then Rscript -e 'built_path <- list.files(pattern = "tidycells_[0-9.]+.tar.gz", full.names = T);if(length(built_path)>0){built_path <- normalizePath(max(built_path));links <- paste0("ftp://win-builder.r-project.org/", c("R-devel", "R-release", "R-oldrelease"), "/", basename(built_path));fup <- function(url) {i <- 0;e <- NULL;repeat({i<-i + 1;e<- try(RCurl::ftpUpload(what = built_path, to = url), silent = TRUE);if(inherits(e, "try-error")){Sys.sleep(1);e <- "failed"}else{cat("Uploaded for:", url, "\n");break();};if(i>50) break();});e;};lapply(links, fup)}'; fi

before_deploy:
  # so no overwrite of linux build
  - if [[ "${TRAVIS_OS_NAME}" = "osx" ]]; then rm -f *.tar.gz; fi
